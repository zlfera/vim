[{"severity":"convention","location":{"begin_pos":61,"end_pos":64},"message":"Assignment Branch Condition size for perform is too high. [56.23/15]","cop_name":"Metrics/AbcSize","status":"unsupported"},{"severity":"convention","location":{"begin_pos":61,"end_pos":64},"message":"Cyclomatic complexity for perform is too high. [9/6]","cop_name":"Metrics/CyclomaticComplexity","status":"unsupported"},{"severity":"convention","location":{"begin_pos":61,"end_pos":1602},"message":"Method has too many lines. [40/10]","cop_name":"Metrics/MethodLength","status":"unsupported"},{"severity":"convention","location":{"begin_pos":61,"end_pos":64},"message":"Perceived complexity for perform is too high. [13/7]","cop_name":"Metrics/PerceivedComplexity","status":"unsupported"},{"severity":"warning","location":{"begin_pos":74,"end_pos":78},"message":"Unused method argument - `args`. If it's necessary, use `_` or `_args` as an argument name to indicate that it won't be used. You can also write as `perform(*)` if you want the method to accept any arguments but don't care about them.","cop_name":"Lint/UnusedMethodArgument","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":460,"end_pos":464},"message":"Do not write to stdout. Use Rails' logger if you want to log.","cop_name":"Rails/Output","status":"unsupported"},{"severity":"convention","location":{"begin_pos":708,"end_pos":710},"message":"Use a guard clause instead of wrapping the code inside a conditional expression.","cop_name":"Style/GuardClause","status":"unsupported"},{"severity":"warning","location":{"begin_pos":855,"end_pos":856},"message":"Shadowing outer local variable - `i`.","cop_name":"Lint/ShadowingOuterLocalVariable","status":"unsupported"},{"severity":"convention","location":{"begin_pos":995,"end_pos":997},"message":"Use a guard clause instead of wrapping the code inside a conditional expression.","cop_name":"Style/GuardClause","status":"unsupported"},{"severity":"convention","location":{"begin_pos":1143,"end_pos":1145},"message":"Use a guard clause instead of wrapping the code inside a conditional expression.","cop_name":"Style/GuardClause","status":"unsupported"}]